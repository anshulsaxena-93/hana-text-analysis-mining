#group PartRequest: <STEM:ask|send> <>*? [TE PART_NUMBER] <>+ [/TE]
! This is a comment
! #group = for entity or events, i.e., the ultimate pattern to be extracted
! +, *, ?, {m}, {n,m} = Iteration operators
! [TE] = expression markers to reference dictionary entities
! <>*? AND <>+ = empty or placeholder token with the appropriate regular expression operator


! Rule to identify credit card numbers -- including the card company --
! American Express examples: 371449635398431, 343434343434343, 371144371144376
#group CREDIT_CARD@AMERICAN_EXPRESS: <3[47][0-9]{13,13}>

! The extraction process picks this label up as the entity name for the string that is output
! If the input is Mister Clooney, Clooney will be extracted and labeled LastName
#group Name: <Sir|Mr|Mister> [OD LastName] <POS: Prop> [/OD]

! Matches any entity of type PERSON with Bush, Clinton, Obama & Trump as its last element
#group President: [TE PERSON] < >* <Bush|Clinton|Obama|Trump> [/TE]

! No need to recreate patterns for PERSON, DATE, CURRENCY, etc. Simply use [TE] expression markers
#subgroup MyPerson: ( [TE PERSON] <>+ [/TE] | [TE TITLE] <>+ [/TE] | [TE PEOPLE] <>+ [/TE] )
#group QuoteAuthor: <STEM:say|announce|blurt|contradict> <>* %(MyPerson)